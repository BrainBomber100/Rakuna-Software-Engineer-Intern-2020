import java.util.*;
import java.io.*;
import java.math.*;

/**
 * Auto-generated code below aims at helping you parse
 * the standard input according to the problem statement.
 **/
class Player {

    public static void main(String args[]) {
        Scanner in = new Scanner(System.in);
        int nbFloors = in.nextInt(); // number of floors
        int width = in.nextInt(); // width of the area
        int nbRounds = in.nextInt(); // maximum number of rounds
        int exitFloor = in.nextInt(); // floor on which the exit is found
        int exitPos = in.nextInt(); // position of the exit on its floor
        int nbTotalClones = in.nextInt(); // number of generated clones
        int nbAdditionalElevators = in.nextInt(); // ignore (always zero)
        int nbElevators = in.nextInt(); // number of elevators
        ArrayList<Integer> elfloor = new ArrayList<Integer>(); // create arraylist to store positions
        for(int i = 0; i <= nbElevators-1 ; i++)
        {
            elfloor.add(0); //fill array with zeroes for easy editing
        }
        System.err.println(elfloor);
        for (int i = 0; i < nbElevators; i++) {
            int elevatorFloor = in.nextInt(); // floor on which this elevator is found
            int elevatorPos = in.nextInt(); // position of the elevator on its floor
            elfloor.set(elevatorFloor, elevatorPos); // add Elevator Positions to ArrayList at indexes that correspond with the floor
        } 
       elfloor.add(exitFloor, exitPos); // add the postion of the exit at the index number corresponding to the floor

        // game loop
        while (true) {
            int cloneFloor = in.nextInt(); // floor of the leading clone
            int clonePos = in.nextInt(); // position of the leading clone on its floor
            String direction = in.next(); // direction of the leading clone: LEFT or RIGHT
            int floorPos; // position of target for specific floor
            int temp = 0; // temporary floor number variable
            // Write an action using System.out.println()
            // To debug: System.err.println("Debug messages...");
            System.err.println("cloneFloor: " + cloneFloor);
            if(cloneFloor > 0)
            {
                temp = cloneFloor; // save floor number in case floor number is -1
            }
            if(cloneFloor < 0)
            {
                cloneFloor = temp;
            }
            floorPos = elfloor.get(cloneFloor);
            System.err.println(elfloor);
            System.err.println("cloneFloor: " + cloneFloor);
            System.err.println("clonePos: " + clonePos);
            System.err.println("floorPos: " + floorPos);
            
            
            if((clonePos > floorPos && direction.equals("RIGHT") || clonePos < floorPos && direction.equals("LEFT")) && (clonePos != floorPos))
                {   
                    System.out.println("BLOCK");   // block if heading in wrong direction
                }
           
            else
                {
                    System.out.println("WAIT"); //wait if heading in right direction
                    temp = cloneFloor;
                                
                }
            
            
        }
    }
}
